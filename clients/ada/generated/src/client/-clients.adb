--  
--  No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
--
--  The version of the OpenAPI document: 20220523
--  Contact: blah+oapicf@cliffano.com
--
--  NOTE: This package is auto generated by OpenAPI-Generator 7.9.0.
--  https://openapi-generator.tech
--  Do not edit the class manually.

pragma Warnings (Off, "*is not referenced");
with Swagger.Streams;
package body .Clients is
   pragma Style_Checks ("-bmrIu");

   Media_List_1 : constant Swagger.Mime_List := (
     1 => Swagger.Mime_Text   );


   --  
   procedure Ability_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/ability/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Ability_List;

   --  
   procedure Ability_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/ability/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Ability_Read;

   --  
   procedure Berry_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/berry/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Berry_List;

   --  
   procedure Berry_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/berry/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Berry_Read;

   --  
   procedure Berry_Firmness_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/berry-firmness/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Berry_Firmness_List;

   --  
   procedure Berry_Firmness_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/berry-firmness/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Berry_Firmness_Read;

   --  
   procedure Berry_Flavor_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/berry-flavor/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Berry_Flavor_List;

   --  
   procedure Berry_Flavor_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/berry-flavor/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Berry_Flavor_Read;

   --  
   procedure Characteristic_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/characteristic/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Characteristic_List;

   --  
   procedure Characteristic_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/characteristic/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Characteristic_Read;

   --  
   procedure Contest_Effect_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/contest-effect/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Contest_Effect_List;

   --  
   procedure Contest_Effect_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/contest-effect/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Contest_Effect_Read;

   --  
   procedure Contest_Type_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/contest-type/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Contest_Type_List;

   --  
   procedure Contest_Type_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/contest-type/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Contest_Type_Read;

   --  
   procedure Egg_Group_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/egg-group/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Egg_Group_List;

   --  
   procedure Egg_Group_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/egg-group/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Egg_Group_Read;

   --  
   procedure Encounter_Condition_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/encounter-condition/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Encounter_Condition_List;

   --  
   procedure Encounter_Condition_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/encounter-condition/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Encounter_Condition_Read;

   --  
   procedure Encounter_Condition_Value_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/encounter-condition-value/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Encounter_Condition_Value_List;

   --  
   procedure Encounter_Condition_Value_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/encounter-condition-value/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Encounter_Condition_Value_Read;

   --  
   procedure Encounter_Method_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/encounter-method/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Encounter_Method_List;

   --  
   procedure Encounter_Method_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/encounter-method/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Encounter_Method_Read;

   --  
   procedure Evolution_Chain_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/evolution-chain/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Evolution_Chain_List;

   --  
   procedure Evolution_Chain_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/evolution-chain/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Evolution_Chain_Read;

   --  
   procedure Evolution_Trigger_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/evolution-trigger/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Evolution_Trigger_List;

   --  
   procedure Evolution_Trigger_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/evolution-trigger/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Evolution_Trigger_Read;

   --  
   procedure Gender_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/gender/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Gender_List;

   --  
   procedure Gender_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/gender/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Gender_Read;

   --  
   procedure Generation_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/generation/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Generation_List;

   --  
   procedure Generation_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/generation/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Generation_Read;

   --  
   procedure Growth_Rate_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/growth-rate/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Growth_Rate_List;

   --  
   procedure Growth_Rate_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/growth-rate/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Growth_Rate_Read;

   --  
   procedure Item_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/item/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Item_List;

   --  
   procedure Item_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/item/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Item_Read;

   --  
   procedure Item_Attribute_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/item-attribute/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Item_Attribute_List;

   --  
   procedure Item_Attribute_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/item-attribute/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Item_Attribute_Read;

   --  
   procedure Item_Category_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/item-category/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Item_Category_List;

   --  
   procedure Item_Category_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/item-category/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Item_Category_Read;

   --  
   procedure Item_Fling_Effect_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/item-fling-effect/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Item_Fling_Effect_List;

   --  
   procedure Item_Fling_Effect_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/item-fling-effect/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Item_Fling_Effect_Read;

   --  
   procedure Item_Pocket_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/item-pocket/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Item_Pocket_List;

   --  
   procedure Item_Pocket_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/item-pocket/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Item_Pocket_Read;

   --  
   procedure Language_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/language/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Language_List;

   --  
   procedure Language_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/language/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Language_Read;

   --  
   procedure Location_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/location/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Location_List;

   --  
   procedure Location_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/location/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Location_Read;

   --  
   procedure Location_Area_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/location-area/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Location_Area_List;

   --  
   procedure Location_Area_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/location-area/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Location_Area_Read;

   --  
   procedure Machine_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/machine/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Machine_List;

   --  
   procedure Machine_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/machine/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Machine_Read;

   --  
   procedure Move_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/move/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Move_List;

   --  
   procedure Move_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/move/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Move_Read;

   --  
   procedure Move_Ailment_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/move-ailment/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Move_Ailment_List;

   --  
   procedure Move_Ailment_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/move-ailment/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Move_Ailment_Read;

   --  
   procedure Move_Battle_Style_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/move-battle-style/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Move_Battle_Style_List;

   --  
   procedure Move_Battle_Style_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/move-battle-style/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Move_Battle_Style_Read;

   --  
   procedure Move_Category_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/move-category/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Move_Category_List;

   --  
   procedure Move_Category_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/move-category/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Move_Category_Read;

   --  
   procedure Move_Damage_Class_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/move-damage-class/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Move_Damage_Class_List;

   --  
   procedure Move_Damage_Class_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/move-damage-class/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Move_Damage_Class_Read;

   --  
   procedure Move_Learn_Method_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/move-learn-method/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Move_Learn_Method_List;

   --  
   procedure Move_Learn_Method_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/move-learn-method/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Move_Learn_Method_Read;

   --  
   procedure Move_Target_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/move-target/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Move_Target_List;

   --  
   procedure Move_Target_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/move-target/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Move_Target_Read;

   --  
   procedure Nature_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/nature/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Nature_List;

   --  
   procedure Nature_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/nature/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Nature_Read;

   --  
   procedure Pal_Park_Area_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/pal-park-area/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Pal_Park_Area_List;

   --  
   procedure Pal_Park_Area_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/pal-park-area/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Pal_Park_Area_Read;

   --  
   procedure Pokeathlon_Stat_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/pokeathlon-stat/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Pokeathlon_Stat_List;

   --  
   procedure Pokeathlon_Stat_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/pokeathlon-stat/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Pokeathlon_Stat_Read;

   --  
   procedure Pokedex_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/pokedex/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Pokedex_List;

   --  
   procedure Pokedex_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/pokedex/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Pokedex_Read;

   --  
   procedure Pokemon_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/pokemon/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Pokemon_List;

   --  
   procedure Pokemon_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/pokemon/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Pokemon_Read;

   --  
   procedure Pokemon_Color_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/pokemon-color/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Pokemon_Color_List;

   --  
   procedure Pokemon_Color_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/pokemon-color/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Pokemon_Color_Read;

   --  
   procedure Pokemon_Form_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/pokemon-form/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Pokemon_Form_List;

   --  
   procedure Pokemon_Form_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/pokemon-form/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Pokemon_Form_Read;

   --  
   procedure Pokemon_Habitat_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/pokemon-habitat/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Pokemon_Habitat_List;

   --  
   procedure Pokemon_Habitat_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/pokemon-habitat/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Pokemon_Habitat_Read;

   --  
   procedure Pokemon_Shape_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/pokemon-shape/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Pokemon_Shape_List;

   --  
   procedure Pokemon_Shape_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/pokemon-shape/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Pokemon_Shape_Read;

   --  
   procedure Pokemon_Species_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/pokemon-species/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Pokemon_Species_List;

   --  
   procedure Pokemon_Species_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/pokemon-species/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Pokemon_Species_Read;

   --  
   procedure Region_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/region/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Region_List;

   --  
   procedure Region_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/region/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Region_Read;

   --  
   procedure Stat_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/stat/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Stat_List;

   --  
   procedure Stat_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/stat/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Stat_Read;

   --  
   procedure Super_Contest_Effect_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/super-contest-effect/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Super_Contest_Effect_List;

   --  
   procedure Super_Contest_Effect_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/super-contest-effect/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Super_Contest_Effect_Read;

   --  
   procedure Type_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/type/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Type_List;

   --  
   procedure Type_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/type/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Type_Read;

   --  
   procedure Version_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/version/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Version_List;

   --  
   procedure Version_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/version/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Version_Read;

   --  
   procedure Version_Group_List
      (Client : in out Client_Type;
       Limit : in Swagger.Nullable_Integer;
       Offset : in Swagger.Nullable_Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("offset", Offset);
      URI.Set_Path ("/api/v2/version-group/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Version_Group_List;

   --  
   procedure Version_Group_Read
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept (Media_List_1);


      URI.Set_Path ("/api/v2/version-group/{id}/");
      URI.Set_Path_Param ("id", .Models.To_String (Id));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Version_Group_Read;
end .Clients;
