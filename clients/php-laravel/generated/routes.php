<?php declare(strict_types=1);

/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 * PHP version 8.1
 *
 * The version of the OpenAPI document: 20220523
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 * Source files are located at:
 *
 * > https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator/src/main/resources/php-laravel/
 */


use Illuminate\Support\Facades\Route;

/**
 * GET abilityList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/ability/', [\OpenAPI\Server\Http\Controllers\AbilityController::class, 'abilityList'])->name('ability.ability.list');

/**
 * GET abilityRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/ability/{id}/', [\OpenAPI\Server\Http\Controllers\AbilityController::class, 'abilityRead'])->name('ability.ability.read');

/**
 * GET berryList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/berry/', [\OpenAPI\Server\Http\Controllers\BerryController::class, 'berryList'])->name('berry.berry.list');

/**
 * GET berryRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/berry/{id}/', [\OpenAPI\Server\Http\Controllers\BerryController::class, 'berryRead'])->name('berry.berry.read');

/**
 * GET berryFirmnessList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/berry-firmness/', [\OpenAPI\Server\Http\Controllers\BerryFirmnessController::class, 'berryFirmnessList'])->name('berryFirmness.berry.firmness.list');

/**
 * GET berryFirmnessRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/berry-firmness/{id}/', [\OpenAPI\Server\Http\Controllers\BerryFirmnessController::class, 'berryFirmnessRead'])->name('berryFirmness.berry.firmness.read');

/**
 * GET berryFlavorList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/berry-flavor/', [\OpenAPI\Server\Http\Controllers\BerryFlavorController::class, 'berryFlavorList'])->name('berryFlavor.berry.flavor.list');

/**
 * GET berryFlavorRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/berry-flavor/{id}/', [\OpenAPI\Server\Http\Controllers\BerryFlavorController::class, 'berryFlavorRead'])->name('berryFlavor.berry.flavor.read');

/**
 * GET characteristicList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/characteristic/', [\OpenAPI\Server\Http\Controllers\CharacteristicController::class, 'characteristicList'])->name('characteristic.characteristic.list');

/**
 * GET characteristicRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/characteristic/{id}/', [\OpenAPI\Server\Http\Controllers\CharacteristicController::class, 'characteristicRead'])->name('characteristic.characteristic.read');

/**
 * GET contestEffectList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/contest-effect/', [\OpenAPI\Server\Http\Controllers\ContestEffectController::class, 'contestEffectList'])->name('contestEffect.contest.effect.list');

/**
 * GET contestEffectRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/contest-effect/{id}/', [\OpenAPI\Server\Http\Controllers\ContestEffectController::class, 'contestEffectRead'])->name('contestEffect.contest.effect.read');

/**
 * GET contestTypeList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/contest-type/', [\OpenAPI\Server\Http\Controllers\ContestTypeController::class, 'contestTypeList'])->name('contestType.contest.type.list');

/**
 * GET contestTypeRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/contest-type/{id}/', [\OpenAPI\Server\Http\Controllers\ContestTypeController::class, 'contestTypeRead'])->name('contestType.contest.type.read');

/**
 * GET eggGroupList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/egg-group/', [\OpenAPI\Server\Http\Controllers\EggGroupController::class, 'eggGroupList'])->name('eggGroup.egg.group.list');

/**
 * GET eggGroupRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/egg-group/{id}/', [\OpenAPI\Server\Http\Controllers\EggGroupController::class, 'eggGroupRead'])->name('eggGroup.egg.group.read');

/**
 * GET encounterConditionList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/encounter-condition/', [\OpenAPI\Server\Http\Controllers\EncounterConditionController::class, 'encounterConditionList'])->name('encounterCondition.encounter.condition.list');

/**
 * GET encounterConditionRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/encounter-condition/{id}/', [\OpenAPI\Server\Http\Controllers\EncounterConditionController::class, 'encounterConditionRead'])->name('encounterCondition.encounter.condition.read');

/**
 * GET encounterConditionValueList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/encounter-condition-value/', [\OpenAPI\Server\Http\Controllers\EncounterConditionValueController::class, 'encounterConditionValueList'])->name('encounterConditionValue.encounter.condition.value.list');

/**
 * GET encounterConditionValueRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/encounter-condition-value/{id}/', [\OpenAPI\Server\Http\Controllers\EncounterConditionValueController::class, 'encounterConditionValueRead'])->name('encounterConditionValue.encounter.condition.value.read');

/**
 * GET encounterMethodList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/encounter-method/', [\OpenAPI\Server\Http\Controllers\EncounterMethodController::class, 'encounterMethodList'])->name('encounterMethod.encounter.method.list');

/**
 * GET encounterMethodRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/encounter-method/{id}/', [\OpenAPI\Server\Http\Controllers\EncounterMethodController::class, 'encounterMethodRead'])->name('encounterMethod.encounter.method.read');

/**
 * GET evolutionChainList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/evolution-chain/', [\OpenAPI\Server\Http\Controllers\EvolutionChainController::class, 'evolutionChainList'])->name('evolutionChain.evolution.chain.list');

/**
 * GET evolutionChainRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/evolution-chain/{id}/', [\OpenAPI\Server\Http\Controllers\EvolutionChainController::class, 'evolutionChainRead'])->name('evolutionChain.evolution.chain.read');

/**
 * GET evolutionTriggerList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/evolution-trigger/', [\OpenAPI\Server\Http\Controllers\EvolutionTriggerController::class, 'evolutionTriggerList'])->name('evolutionTrigger.evolution.trigger.list');

/**
 * GET evolutionTriggerRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/evolution-trigger/{id}/', [\OpenAPI\Server\Http\Controllers\EvolutionTriggerController::class, 'evolutionTriggerRead'])->name('evolutionTrigger.evolution.trigger.read');

/**
 * GET genderList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/gender/', [\OpenAPI\Server\Http\Controllers\GenderController::class, 'genderList'])->name('gender.gender.list');

/**
 * GET genderRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/gender/{id}/', [\OpenAPI\Server\Http\Controllers\GenderController::class, 'genderRead'])->name('gender.gender.read');

/**
 * GET generationList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/generation/', [\OpenAPI\Server\Http\Controllers\GenerationController::class, 'generationList'])->name('generation.generation.list');

/**
 * GET generationRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/generation/{id}/', [\OpenAPI\Server\Http\Controllers\GenerationController::class, 'generationRead'])->name('generation.generation.read');

/**
 * GET growthRateList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/growth-rate/', [\OpenAPI\Server\Http\Controllers\GrowthRateController::class, 'growthRateList'])->name('growthRate.growth.rate.list');

/**
 * GET growthRateRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/growth-rate/{id}/', [\OpenAPI\Server\Http\Controllers\GrowthRateController::class, 'growthRateRead'])->name('growthRate.growth.rate.read');

/**
 * GET itemList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/item/', [\OpenAPI\Server\Http\Controllers\ItemController::class, 'itemList'])->name('item.item.list');

/**
 * GET itemRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/item/{id}/', [\OpenAPI\Server\Http\Controllers\ItemController::class, 'itemRead'])->name('item.item.read');

/**
 * GET itemAttributeList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/item-attribute/', [\OpenAPI\Server\Http\Controllers\ItemAttributeController::class, 'itemAttributeList'])->name('itemAttribute.item.attribute.list');

/**
 * GET itemAttributeRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/item-attribute/{id}/', [\OpenAPI\Server\Http\Controllers\ItemAttributeController::class, 'itemAttributeRead'])->name('itemAttribute.item.attribute.read');

/**
 * GET itemCategoryList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/item-category/', [\OpenAPI\Server\Http\Controllers\ItemCategoryController::class, 'itemCategoryList'])->name('itemCategory.item.category.list');

/**
 * GET itemCategoryRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/item-category/{id}/', [\OpenAPI\Server\Http\Controllers\ItemCategoryController::class, 'itemCategoryRead'])->name('itemCategory.item.category.read');

/**
 * GET itemFlingEffectList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/item-fling-effect/', [\OpenAPI\Server\Http\Controllers\ItemFlingEffectController::class, 'itemFlingEffectList'])->name('itemFlingEffect.item.fling.effect.list');

/**
 * GET itemFlingEffectRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/item-fling-effect/{id}/', [\OpenAPI\Server\Http\Controllers\ItemFlingEffectController::class, 'itemFlingEffectRead'])->name('itemFlingEffect.item.fling.effect.read');

/**
 * GET itemPocketList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/item-pocket/', [\OpenAPI\Server\Http\Controllers\ItemPocketController::class, 'itemPocketList'])->name('itemPocket.item.pocket.list');

/**
 * GET itemPocketRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/item-pocket/{id}/', [\OpenAPI\Server\Http\Controllers\ItemPocketController::class, 'itemPocketRead'])->name('itemPocket.item.pocket.read');

/**
 * GET languageList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/language/', [\OpenAPI\Server\Http\Controllers\LanguageController::class, 'languageList'])->name('language.language.list');

/**
 * GET languageRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/language/{id}/', [\OpenAPI\Server\Http\Controllers\LanguageController::class, 'languageRead'])->name('language.language.read');

/**
 * GET locationList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/location/', [\OpenAPI\Server\Http\Controllers\LocationController::class, 'locationList'])->name('location.location.list');

/**
 * GET locationRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/location/{id}/', [\OpenAPI\Server\Http\Controllers\LocationController::class, 'locationRead'])->name('location.location.read');

/**
 * GET locationAreaList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/location-area/', [\OpenAPI\Server\Http\Controllers\LocationAreaController::class, 'locationAreaList'])->name('locationArea.location.area.list');

/**
 * GET locationAreaRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/location-area/{id}/', [\OpenAPI\Server\Http\Controllers\LocationAreaController::class, 'locationAreaRead'])->name('locationArea.location.area.read');

/**
 * GET machineList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/machine/', [\OpenAPI\Server\Http\Controllers\MachineController::class, 'machineList'])->name('machine.machine.list');

/**
 * GET machineRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/machine/{id}/', [\OpenAPI\Server\Http\Controllers\MachineController::class, 'machineRead'])->name('machine.machine.read');

/**
 * GET moveList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/move/', [\OpenAPI\Server\Http\Controllers\MoveController::class, 'moveList'])->name('move.move.list');

/**
 * GET moveRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/move/{id}/', [\OpenAPI\Server\Http\Controllers\MoveController::class, 'moveRead'])->name('move.move.read');

/**
 * GET moveAilmentList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/move-ailment/', [\OpenAPI\Server\Http\Controllers\MoveAilmentController::class, 'moveAilmentList'])->name('moveAilment.move.ailment.list');

/**
 * GET moveAilmentRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/move-ailment/{id}/', [\OpenAPI\Server\Http\Controllers\MoveAilmentController::class, 'moveAilmentRead'])->name('moveAilment.move.ailment.read');

/**
 * GET moveBattleStyleList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/move-battle-style/', [\OpenAPI\Server\Http\Controllers\MoveBattleStyleController::class, 'moveBattleStyleList'])->name('moveBattleStyle.move.battle.style.list');

/**
 * GET moveBattleStyleRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/move-battle-style/{id}/', [\OpenAPI\Server\Http\Controllers\MoveBattleStyleController::class, 'moveBattleStyleRead'])->name('moveBattleStyle.move.battle.style.read');

/**
 * GET moveCategoryList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/move-category/', [\OpenAPI\Server\Http\Controllers\MoveCategoryController::class, 'moveCategoryList'])->name('moveCategory.move.category.list');

/**
 * GET moveCategoryRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/move-category/{id}/', [\OpenAPI\Server\Http\Controllers\MoveCategoryController::class, 'moveCategoryRead'])->name('moveCategory.move.category.read');

/**
 * GET moveDamageClassList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/move-damage-class/', [\OpenAPI\Server\Http\Controllers\MoveDamageClassController::class, 'moveDamageClassList'])->name('moveDamageClass.move.damage.class.list');

/**
 * GET moveDamageClassRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/move-damage-class/{id}/', [\OpenAPI\Server\Http\Controllers\MoveDamageClassController::class, 'moveDamageClassRead'])->name('moveDamageClass.move.damage.class.read');

/**
 * GET moveLearnMethodList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/move-learn-method/', [\OpenAPI\Server\Http\Controllers\MoveLearnMethodController::class, 'moveLearnMethodList'])->name('moveLearnMethod.move.learn.method.list');

/**
 * GET moveLearnMethodRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/move-learn-method/{id}/', [\OpenAPI\Server\Http\Controllers\MoveLearnMethodController::class, 'moveLearnMethodRead'])->name('moveLearnMethod.move.learn.method.read');

/**
 * GET moveTargetList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/move-target/', [\OpenAPI\Server\Http\Controllers\MoveTargetController::class, 'moveTargetList'])->name('moveTarget.move.target.list');

/**
 * GET moveTargetRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/move-target/{id}/', [\OpenAPI\Server\Http\Controllers\MoveTargetController::class, 'moveTargetRead'])->name('moveTarget.move.target.read');

/**
 * GET natureList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/nature/', [\OpenAPI\Server\Http\Controllers\NatureController::class, 'natureList'])->name('nature.nature.list');

/**
 * GET natureRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/nature/{id}/', [\OpenAPI\Server\Http\Controllers\NatureController::class, 'natureRead'])->name('nature.nature.read');

/**
 * GET palParkAreaList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/pal-park-area/', [\OpenAPI\Server\Http\Controllers\PalParkAreaController::class, 'palParkAreaList'])->name('palParkArea.pal.park.area.list');

/**
 * GET palParkAreaRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/pal-park-area/{id}/', [\OpenAPI\Server\Http\Controllers\PalParkAreaController::class, 'palParkAreaRead'])->name('palParkArea.pal.park.area.read');

/**
 * GET pokeathlonStatList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/pokeathlon-stat/', [\OpenAPI\Server\Http\Controllers\PokeathlonStatController::class, 'pokeathlonStatList'])->name('pokeathlonStat.pokeathlon.stat.list');

/**
 * GET pokeathlonStatRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/pokeathlon-stat/{id}/', [\OpenAPI\Server\Http\Controllers\PokeathlonStatController::class, 'pokeathlonStatRead'])->name('pokeathlonStat.pokeathlon.stat.read');

/**
 * GET pokedexList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/pokedex/', [\OpenAPI\Server\Http\Controllers\PokedexController::class, 'pokedexList'])->name('pokedex.pokedex.list');

/**
 * GET pokedexRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/pokedex/{id}/', [\OpenAPI\Server\Http\Controllers\PokedexController::class, 'pokedexRead'])->name('pokedex.pokedex.read');

/**
 * GET pokemonList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/pokemon/', [\OpenAPI\Server\Http\Controllers\PokemonController::class, 'pokemonList'])->name('pokemon.pokemon.list');

/**
 * GET pokemonRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/pokemon/{id}/', [\OpenAPI\Server\Http\Controllers\PokemonController::class, 'pokemonRead'])->name('pokemon.pokemon.read');

/**
 * GET pokemonColorList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/pokemon-color/', [\OpenAPI\Server\Http\Controllers\PokemonColorController::class, 'pokemonColorList'])->name('pokemonColor.pokemon.color.list');

/**
 * GET pokemonColorRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/pokemon-color/{id}/', [\OpenAPI\Server\Http\Controllers\PokemonColorController::class, 'pokemonColorRead'])->name('pokemonColor.pokemon.color.read');

/**
 * GET pokemonFormList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/pokemon-form/', [\OpenAPI\Server\Http\Controllers\PokemonFormController::class, 'pokemonFormList'])->name('pokemonForm.pokemon.form.list');

/**
 * GET pokemonFormRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/pokemon-form/{id}/', [\OpenAPI\Server\Http\Controllers\PokemonFormController::class, 'pokemonFormRead'])->name('pokemonForm.pokemon.form.read');

/**
 * GET pokemonHabitatList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/pokemon-habitat/', [\OpenAPI\Server\Http\Controllers\PokemonHabitatController::class, 'pokemonHabitatList'])->name('pokemonHabitat.pokemon.habitat.list');

/**
 * GET pokemonHabitatRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/pokemon-habitat/{id}/', [\OpenAPI\Server\Http\Controllers\PokemonHabitatController::class, 'pokemonHabitatRead'])->name('pokemonHabitat.pokemon.habitat.read');

/**
 * GET pokemonShapeList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/pokemon-shape/', [\OpenAPI\Server\Http\Controllers\PokemonShapeController::class, 'pokemonShapeList'])->name('pokemonShape.pokemon.shape.list');

/**
 * GET pokemonShapeRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/pokemon-shape/{id}/', [\OpenAPI\Server\Http\Controllers\PokemonShapeController::class, 'pokemonShapeRead'])->name('pokemonShape.pokemon.shape.read');

/**
 * GET pokemonSpeciesList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/pokemon-species/', [\OpenAPI\Server\Http\Controllers\PokemonSpeciesController::class, 'pokemonSpeciesList'])->name('pokemonSpecies.pokemon.species.list');

/**
 * GET pokemonSpeciesRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/pokemon-species/{id}/', [\OpenAPI\Server\Http\Controllers\PokemonSpeciesController::class, 'pokemonSpeciesRead'])->name('pokemonSpecies.pokemon.species.read');

/**
 * GET regionList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/region/', [\OpenAPI\Server\Http\Controllers\RegionController::class, 'regionList'])->name('region.region.list');

/**
 * GET regionRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/region/{id}/', [\OpenAPI\Server\Http\Controllers\RegionController::class, 'regionRead'])->name('region.region.read');

/**
 * GET statList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/stat/', [\OpenAPI\Server\Http\Controllers\StatController::class, 'statList'])->name('stat.stat.list');

/**
 * GET statRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/stat/{id}/', [\OpenAPI\Server\Http\Controllers\StatController::class, 'statRead'])->name('stat.stat.read');

/**
 * GET superContestEffectList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/super-contest-effect/', [\OpenAPI\Server\Http\Controllers\SuperContestEffectController::class, 'superContestEffectList'])->name('superContestEffect.super.contest.effect.list');

/**
 * GET superContestEffectRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/super-contest-effect/{id}/', [\OpenAPI\Server\Http\Controllers\SuperContestEffectController::class, 'superContestEffectRead'])->name('superContestEffect.super.contest.effect.read');

/**
 * GET typeList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/type/', [\OpenAPI\Server\Http\Controllers\TypeController::class, 'typeList'])->name('type.type.list');

/**
 * GET typeRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/type/{id}/', [\OpenAPI\Server\Http\Controllers\TypeController::class, 'typeRead'])->name('type.type.read');

/**
 * GET versionList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/version/', [\OpenAPI\Server\Http\Controllers\VersionController::class, 'versionList'])->name('version.version.list');

/**
 * GET versionRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/version/{id}/', [\OpenAPI\Server\Http\Controllers\VersionController::class, 'versionRead'])->name('version.version.read');

/**
 * GET versionGroupList
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/version-group/', [\OpenAPI\Server\Http\Controllers\VersionGroupController::class, 'versionGroupList'])->name('versionGroup.version.group.list');

/**
 * GET versionGroupRead
 * Summary: 
 * Notes: 
 */
Route::GET('/api/v2/version-group/{id}/', [\OpenAPI\Server\Http\Controllers\VersionGroupController::class, 'versionGroupRead'])->name('versionGroup.version.group.read');

